rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isRestaurant() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'restaurant';
    }
    
    function isNGO() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ngo';
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if request.auth.uid == userId;
    }

    // Donations collection
    match /donations/{donationId} {
      allow read: if isAuthenticated() && (
        resource.data.restaurantId == request.auth.uid ||
        resource.data.ngoId == request.auth.uid
      );
      allow create: if isRestaurant();
      allow update: if isAuthenticated() && (
        resource.data.restaurantId == request.auth.uid ||
        resource.data.ngoId == request.auth.uid
      );
    }

    // Food Details collection
    match /fooddetails/{foodId} {
      allow read: if isAuthenticated() && (
        resource.data.restaurantId == request.auth.uid ||
        resource.data.ngoId == request.auth.uid
      );
      allow create: if isRestaurant();
      allow update: if isAuthenticated() && (
        resource.data.restaurantId == request.auth.uid ||
        resource.data.ngoId == request.auth.uid
      );
      allow list: if isAuthenticated() && (
        request.query.filters[0].op == '==' &&
        request.query.filters[0].field == 'restaurantId' &&
        request.query.filters[0].value == request.auth.uid
      );
    }

    // Notifications collection
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid ||
        resource.data.ngoId == request.auth.uid ||
        resource.data.restaurantId == request.auth.uid
      );
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        resource.data.userId == request.auth.uid ||
        resource.data.ngoId == request.auth.uid ||
        resource.data.restaurantId == request.auth.uid
      );
      allow list: if isAuthenticated() && (
        request.query.filters[0].op == '==' &&
        request.query.filters[0].field == 'userId' &&
        request.query.filters[0].value == request.auth.uid
      );
    }
  }
} 